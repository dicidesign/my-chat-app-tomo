/* 【style.css 最終版】 */
:root {
    --header-height: 85px; /* ヘッダーの実際の高さを変数として定義 */
     --app-height: 100%; /* ←←← この1行を追加！ */
}

/* --- 1. 基本設定とログイン画面 --- */
html, body {
    height: 100%;
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    padding: 0;
    overflow: hidden;
    background-color: #333;
}

.login-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    padding: 20px;
    box-sizing: border-box;
    background-color: #f0f2f5;
}

.login-form {
    width: 100%;
    max-width: 360px;
    padding: 40px;
    background: white;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    text-align: center;
}
.login-form h1 { margin-top: 0; color: #333; }
.login-form input { width: 100%; padding: 12px; margin-top: 10px; border: 1px solid #ccc; border-radius: 6px; box-sizing: border-box; }
.login-form button { width: 100%; padding: 12px; margin-top: 20px; border: none; background-color: #007bff; color: white; border-radius: 6px; font-size: 16px; cursor: pointer; }


/* --- 2. チャット画面の基本レイアウト --- */
.chat-container {
    display: flex;
    flex-direction: column;
    height: 100dvh;
    width: 100%;
    background-color: #e5e8e3;
}
#background-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0; /* ★★★ 一番奥に配置する！ ★★★ */
    pointer-events: none; /* キャンバスがクリックやタッチを邪魔しないようにする */
}
/* --- ヘッダー --- */
.chat-header {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    z-index: 20; /* ★★★ z-index を 3 に ★★★ */
    background: rgba(0, 0, 0, 0.4);
    color: white;
    text-align: center;
    padding: 12px 20px 55px 20px; /* ★上下のpaddingを均等にする */
    opacity: 0;
}

.chat-theme {
    margin: 0;
    font-size: 28px;
    font-weight: 900;
    text-shadow: 0 1px 3px rgba(0,0,0,0.5);
    cursor: pointer;
    color: rgba(255, 255, 255, 0.9);;
}
.header-divider {
    height: 1px;
    background: rgba(255, 255, 255, 0.3);
    margin-top: 6px;
    /* ★margin-bottom は不要 */
}



#messages {
    flex-grow: 1; /* 残りの高さを全て埋める */
    overflow-y: auto; /* ★★★ ここだけがスクロールを許可される ★★★ */
    list-style-type: none;
    margin: 0;
    padding: 72px 20px 20px 20px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    min-height: 0;
    position: relative;
    z-index: 10;
}



/* --- 3. メッセージ要素（吹き出し、時刻など） --- */
#messages li {
    display: flex;
    align-items: flex-end;
    gap: 8px;
    max-width: 80%;
    /* ↓↓↓ 上下のマージンを調整して、日付との被りを避ける ↓↓↓ */
    margin-top: 5px;
    margin-bottom: 5px;
    opacity: 0;
     transform: translateY(20px);
    transition: opacity 1s ease-out, transform 1s ease-out;
}
#messages li.is-visible {
    opacity: 1;
    transform: translateY(0);
}
#messages li:nth-child(2) { transition-delay: 0.05s; }
#messages li:nth-child(3) { transition-delay: 0.1s; }
#messages li:nth-child(4) { transition-delay: 0.15s; }
#messages li:nth-child(5) { transition-delay: 0.2s; }
/* ... (以下、好きなだけ続けられる) */
#messages li.me {
    /* margin-left: auto; を削除して、以下に変更 */
    align-self: flex-end;
}
#messages li.opponent {
    align-self: flex-start;
    /* ↓↓↓ この1行を追加 ↓↓↓ */
    margin-top: 2px;
}

#messages li.me .message-time {
    order: -1;
}

.name-label {
    font-size: 12px;
    color: #f0f0f0;
    margin-left: 5px;
    margin-bottom: 2px;
}

.bubble {
    padding: 10px 15px;
    border-radius: 12px;
    word-wrap: break-word;
    position: relative;
    word-break: break-all;
}
.bubble:has(img) {
    /* ↓↓↓ この2行を変更 ↓↓↓ */
    padding: 6px;
    background-color: white !important; /* transparent から white に変更 */
    
    /* ↓↓↓ 枠の角丸も、さっきのメッセージに合わせておく ↓↓↓ */
    border-radius: 5px; /* 10px から 12px に変更 */
}
#messages li.me .bubble { background: #8de041; }
#messages li.opponent .bubble { background: #ffffff; }

.message-time {
    font-size: 12px;
    color: #f0f0f0;
    white-space: nowrap;
    margin-bottom: 2px;
}

#messages li img {
    display: block;
    height: auto;
    width: 100%;
    max-width: 250px;
    border-radius: 10px;
    cursor: pointer;
    object-fit: cover;
}


/* --- 4. 入力フォーム --- */
#form {
    background: rgba(0, 0, 0, 0.4);
    padding-top: 10px;
    padding-bottom: 16px;
    padding-left: 10px;
    padding-right: 10px;
    display: flex;
    align-items: flex-end;
    box-sizing: border-box;
    flex-shrink: 0;
    z-index: 20; /* ★★★ z-index を 3 に ★★★ */
    position: relative;
    opacity: 0;
    transition: opacity 1s ease-out;
}
.textarea-wrapper {
    flex: 1; /* 残りの幅をすべて使う */
    display: flex; /* これもflexにしておく */
    margin: 0 10px; /* 左右の余白 */
}
#input {
    width: 100%; /* 親(wrapper)の幅いっぱいに広がる */
    border: 1px solid #ccc;
    padding: 10px;
    border-radius: 5px;
    
    font-family: inherit;
    font-size: 16px;
    line-height: 1.4;
    resize: none;
    overflow-y: hidden; /* JSで制御するまでは、スクロールバーを隠す */
    
    box-sizing: border-box;
}
#input:focus { outline: none; }
.send-button {
    background-color: #4a80e2; /* ボタンの背景色 */
    border: none;
    width: 44px; /* ボタンの幅 */
    height: 44px; /* ボタンの高さ */
    border-radius: 50%; /* 完全な円形に */
    
    display: flex;
    align-items: center;
    justify-content: center;
    
    cursor: pointer;
    transition: background-color 0.2s;
    flex-shrink: 0; /* フォームが縮んでも、ボタンのサイズを維持 */
}

.send-button:hover {
    background-color: #3a70d2; /* ホバー時の色 */
}

.send-button img {
    width: 24px; /* アイコン画像のサイズ */
    height: 24px;
}

.image-upload-label {
    width: 30px;
    height: auto;
    padding: 0 10px 8px;
    font-size: 24px;
    cursor: pointer;
    display: flex;
    align-items: center;
}
.image-upload-label img {
    width: 100%;
    height: auto;
}


/* --- 5. SweetAlert2 モーダルウィンドウのカスタム --- */
.fullscreen-swal {
    width: 100vw !important;
    height: 100vh !important;
    padding: 0 !important;
    background: transparent !important;
    /* ↓↓↓ ヘッダーを配置する基準点にする！ ↓↓↓ */
    position: relative !important; 
    display: flex !important;
    align-items: center;
    justify-content: center;
}

.fullscreen-swal .swal2-image {
    width: auto !important;
    height: auto !important;
    max-width: 100%; /* 親の幅を超えないように */
    max-height: 100%; /* 親の高さを超えないように */
    object-fit: contain;
    margin: 10px 0!important;
}

/* ★★★ ここからが、新しいヘッダーのデザイン ★★★ */
.swal-html-container-custom {
    position: absolute;
    /* ↓↓↓ topとrightを、直接指定する！ ↓↓↓ */
    top: -10px;
    right: -10px;
    left: auto; /* 左は自動に */
    bottom: auto; /* 下も自動に */
    z-index: 10;
    pointer-events: none;
}

.swal-custom-header {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    padding: 0; /* ★★★ paddingは不要になる ★★★ */
    gap: 15px;
    pointer-events: auto;
}

/* ★★★ ヘッダー内の全てのボタンに共通のスタイル ★★★ */
.swal-header-button {
    font-size: 20px;
    color: white;
    text-decoration: none;
    opacity: 0.8;
    transition: opacity 0.2s, transform 0.2s;
    background: rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
}

.swal-header-button:hover {
    opacity: 1;
    transform: scale(1.05);
}

/* style.css の .date-stamp を修正 */

/* --- 日付スタンプ --- */
.date-stamp {
    position: sticky;
    /* ↓↓↓ ヘッダーの高さ(約85px)の、すぐ下に貼り付くように調整 ↓↓↓ */
    top: 0px; 
    z-index: 15;
    font-size: 30px;
    font-weight: 900;
    color: rgba(255, 255, 255, .7);
    text-shadow: 1px 1px 2px rgba(0,0,0,0.4); 
    text-align: center;
    pointer-events: none;
    width: 100%;
    margin-bottom: 10px;
    transition: opacity 0.3s ease-out;
    opacity: 0;
}
.date-stamp.is-hiding {
    opacity: 0;
}


/* --- 7. オリジナル添付メニュー --- */
.attachment-menu {
    position: fixed; /* fixed に変更して、常に画面下部に */
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 50;
    background-color: rgba(0, 0, 0, 0.3);
    display: flex;
    flex-direction: column;
    justify-content: flex-end; /* 下揃えに */
    padding: 10px;
    box-sizing: border-box;
    
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.2s, visibility 0.2s;
}
.attachment-menu.is-active {
    opacity: 1;
    visibility: visible;
}

.attachment-menu-options, .close-menu-button-wrapper {
    background-color: #333; /* ダークな背景色 */
    border-radius: 14px;
    transform: translateY(100px); /* 最初は少し下に隠す */
    transition: transform 0.3s cubic-bezier(0.25, 1, 0.5, 1);
}
.attachment-menu.is-active .attachment-menu-options,
.attachment-menu.is-active .close-menu-button-wrapper {
    transform: translateY(0);
}

.attachment-menu-options {
    display: flex;
    justify-content: space-around;
    padding: 20px 10px;
}
.close-menu-button-wrapper {
    margin-top: 8px;
    background-color: #333;
}

.menu-button {
    background: none;
    border: none;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    font-size: 13px;
    color: white;
    flex: 1; /* ボタンが均等に幅を持つように */
}
.menu-button:not(:last-child) {
    border-right: 1px solid rgba(255, 255, 255, 0.1);
}
.menu-button img {
    width: auto; /* アイコンのサイズ */
    height: 34px;
    margin-bottom: 4px;
}

.close-menu-button {
    width: 100%;
    background: none;
    border: none;
    padding: 15px;
    font-size: 16px;
    font-weight: 600;
    color: white;
    cursor: pointer;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}




.image-preview-popup {
    background: #2c2c2e !important; /* ★★★ 背景を、より濃いグレーに ★★★ */
    border-radius: 16px !important;
    width: 90vw !important;
    max-width: 420px !important;
    padding: 15px !important;
}
.image-preview-image {
    max-height: 70vh;
    border-radius: 12px !important;
    margin: 0 !important;
}
.image-preview-actions {
    margin: 10px 0 0 0 !important;
    width: 100% !important;
    display: flex !important;
    gap: 0 !important; /* ★★★ ボタン間の隙間をゼロに！ ★★★ */
    border: 1px solid rgba(255, 255, 255, 0.2) !important;
    border-radius: 10px !important;
    overflow: hidden; /* 角丸をボタンに反映させるため */
}
.image-preview-button {
    flex: 1;
    border: none !important;
    border-radius: 0 !important; /* ★★★ ボタン自体の角丸はゼロに ★★★ */
    font-weight: 400 !important; /* ★★★ 文字を細く ★★★ */
    padding: 12px !important;
    background: transparent;
    color: white !important;
    transition: background-color 0.2s !important;
}
.image-preview-button:hover {
    background: rgba(255, 255, 255, 0.2) !important;
}
/* ↓↓↓ 真ん中の区切り線を追加 ↓↓↓ */
.image-preview-button.swal2-confirm {
    border-right: 1px solid rgba(255, 255, 255, 0.2) !important;
}
.image-preview-button i {
    margin-right: 8px;
}

/* --- 9. 音声録音モーダル --- */
/* 共通のポップアップスタイル */
.voice-recorder-popup { background: #333 !important; border-radius: 14px !important; color: white !important; width: 90vw !important; max-width: 380px !important; padding: 0 !important; }

/* REC画面 */
.voice-recorder-popup .swal2-title { display: none !important; }
.voice-recorder-icon-wrapper { width: 120px; height: 120px; border: 2px solid rgba(255, 255, 255, 0.5); border-radius: 50%; display: flex; align-items: center; justify-content: center; margin: 30px auto 20px; }
.voice-recorder-icon { width: 48px; height: 48px; }
.voice-recorder-icon.is-recording { animation: pulse-mic 1.5s infinite; }
@keyframes pulse-mic { 0% { transform: scale(1); } 50% { transform: scale(1.3); } 100% { transform: scale(1); } }
.voice-recorder-timer { font-size: 1.5em; color: white; font-family: monospace; margin-bottom: 30px; }
.voice-recorder-popup .swal2-actions { border-top: 1px solid rgba(255, 255, 255, 0.1); width: 100% !important; margin: 0 !important; padding: 0 !important; display: flex !important; gap: 0 !important; }
.voice-recorder-popup .swal2-styled { flex: 1; background: none !important; border-radius: 0 !important; margin: 0 !important; box-shadow: none !important; font-weight: 300 !important; font-size: 1em !important; padding: 25px 0 !important; }
.voice-recorder-popup .swal2-styled:not(:last-child):not(.swal2-cancel) { border-right: 1px solid rgba(255, 255, 255, 0.1); }
.voice-recorder-popup .swal2-styled.is-active, .voice-recorder-popup .swal2-styled:active { background: rgba(255, 255, 255, 0.1) !important; }
.voice-recorder-popup .rec-button.is-active { background: rgba(231, 76, 60, 0.2) !important; color: #e74c3c !important; }

/* --- Audio Check画面の特別なスタイル --- */
.audio-check-popup .swal2-html-container {
    margin: 0 !important;
    padding: 0 !important;
}
.audio-check-container {
    display: flex;
    flex-direction: column;
    color: white;
}
.audio-check-title {
    font-weight: 400;
    padding: 20px;
    font-size: 1.2em;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}
.audio-check-buttons-main {
    display: flex;
    height: 70px;
}
.audio-check-buttons-footer {
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    padding: 4px 0;
}
.audio-check-button {
    flex: 1;
    background: none;
    border: none;
    color: white;
    font-weight: 300;
    font-size: 1em;
    padding: 20px 0; /* ★★★ 真ん中の段のボタンの高さを確保 ★★★ */
    cursor: pointer;
    transition: background-color 0.2s;
}
.audio-check-button:not(:last-child) {
    border-right: 1px solid rgba(255, 255, 255, 0.1);
}
.audio-check-button:hover,
.audio-check-button.is-active {
    background: rgba(255, 255, 255, 0.1);
}
.audio-check-button.send {
    font-size: 1.8em;
}
.audio-check-button.close {
    padding: 15px 0; /* CLOSEボタンは少し高さを低く */
}
.audio-check-button i {
    margin-right: 8px;
}

/* --- 10. 音声メッセージのスタイル調整 --- */
.bubble audio {
    display: block;
    width: 200ppx;
    height: auto;

    max-width: 250px !important; /* ただし、最大幅は画像と同じに */
}

.bubble audio {
    width: 250px; /* ★★★ 幅を固定値で指定する！ ★★★ */
    height: 40px; /* 高さを指定して、Chromeでの表示を安定させる */
    overflow: hidden;
}


/* --- 11. カスタムポップアップメニュー --- */
.popup-menu {
    position: absolute;
    z-index: 100;
    background-color: #4c4c4c;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.2);
    display: flex;
    padding: 5px;

    opacity: 0;
    visibility: hidden;
    /* ↓↓↓ アニメーションの基準を、上下方向に変更！ ↓↓↓ */
    transform: translateY(10px);
    transition: opacity 0.15s, transform 0.15s, visibility 0.15s;
    margin-left: 80px;
}

.popup-menu.is-active {
    opacity: 1;
    visibility: visible;
    /* ↓↓↓ is-activeになったら、元の位置に戻る（フワッと浮き上がる） ↓↓↓ */
    transform: translateY(0);
}

.popup-menu-button {
    background: none;
    border: none;
    color: white;
    padding: 10px 15px;
    font-size: 14px;
    cursor: pointer;
    white-space: nowrap;
    transition: background-color 0.2s;
}

.popup-menu-button:hover {
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 5px;
}

.popup-menu-button:not(:first-child) {
    border-left: 1px solid rgba(255, 255, 255, 0.2);
}

/* --- 12. 削除確認 (SweetAlert2) カスタム --- */
.delete-confirm-popup {
    background: #333 !important;
    border-radius: 14px !important;
}
.delete-confirm-title {
    color: white !important;
    font-weight: 100 !important;
    font-size: 20px !important;
}
.delete-confirm-text {
    color: #ccc !important;
    width: 30px !important;
    height: 30px !important;
}

.delete-confirm-button {
    border-radius: 4px !important;
    font-weight: bold !important;
    padding: 10px 20px !important;
    margin: 0 5px !important;
    border: none !important;
    box-shadow: none !important;
}
.delete-confirm-button.confirm {
    background-color:transparent !important;
    border: 1px solid #fff !important;
    margin-right: 20px !important;
}
.delete-confirm-button.cancel {
    background-color: transparent !important;
    border: 1px solid #fff !important;
    margin-left: 20px !important;
}

/* --- 16. グラスモーフィズム背景 --- */

/* 磨りガラスのレイヤー */
.glass-overlay {
    position: absolute;
    top: 0; left: 0; width: 100%; height: 100%;
    z-index: 5;
    background-image: url('images/glass.png');
    background-size: cover;
    opacity: 0;
}






/* --- 17. CSSキーフレームアニメーションによるオープニング演出 --- */

/* ★ フェードイン用のアニメーション定義 ★ */
@keyframes fadeIn {
  from { opacity: 0; }
  to   { opacity: 1; }
}

/* ★ ぼかし（グラスモーフィズム）用のアニメーション定義 ★ */
@keyframes dreamyEffect {
  from { 
    filter: blur(0px); 
    /* glass-overlay の opacity は animation 側で直接制御する */
  }
  to   { 
    filter: blur(25px); 
  }
}

/* ★ 磨りガラス（glass-overlay）専用のフェードインアニメーション ★ */
@keyframes glassOverlayFadeIn {
  from { opacity: 0; }
  to   { opacity: 0.3; } /* 最終的な透明度を 0.3 にする */
}


/* --- 各要素に、定義したアニメーションを適用する --- */

/* 1. is-animatingが付いたら、アニメーションを開始する */
.chat-container.is-animating .chat-header,
.chat-container.is-animating #form,
.chat-container.is-animating .date-stamp {
    animation-name: fadeIn;            /* どのアニメーションを使うか */
    animation-duration: 1s;            /* アニメーションの時間 */
    animation-delay: 4s;               /* ★★★ 4秒待ってから開始 ★★★ */
    animation-fill-mode: forwards;     /* アニメーション終了後、最後の状態を維持 */
    animation-timing-function: ease-out; /* 動きの緩急 */
}

/* 2. メッセージリストも同様に設定 */
.chat-container.is-animating #messages {
    animation-name: fadeIn;
    animation-duration: 1s;
    animation-delay: 4s;
    animation-fill-mode: forwards;
}

/* 3. 背景キャンバスのぼかしアニメーション */
.chat-container.is-animating #background-canvas {
    animation-name: dreamyEffect;
    animation-duration: 1s;
    animation-delay: 4s;
    animation-fill-mode: forwards;
}

/* 4. 磨りガラスのフェードインアニメーション */
.chat-container.is-animating .glass-overlay {
    animation-name: glassOverlayFadeIn;
    animation-duration: 1s;
    animation-delay: 4s;
    animation-fill-mode: forwards;
}