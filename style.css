/* style.css をこれでまるごと上書き */

/* --- 全体の設定 --- */
html, body {
    height: 100%;
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    overflow: hidden; /* ★重要：内側でスクロールさせるので、bodyのスクロールは禁止 */
}

/* --- ★★★ ここからが新しいレイアウトの核 ★★★ --- */
.chat-container {
    display: flex;
    flex-direction: column; /* 上から下に要素を並べる */
    height: 100%;
    background-color: #7b99c7;
}

/* --- メッセージリストのエリア --- */
#messages {
    flex: 1; /* ★重要：残りの高さを全てこの要素が使う */
    overflow-y: auto; /* ★重要：中身が溢れたら、この要素内だけでスクロールさせる */
    list-style-type: none;
    margin: 0;
    padding: 20px;
    box-sizing: border-box;
    /* border: 2px solid red; デバッグ用なのでコメントアウト */
}
/* --- ★★★ ここまでが新しいレイアウトの核 ★★★ --- */


/* --- 各メッセージ（li要素）の基本スタイル --- */
#messages li {
    padding: 10px 15px;
    border-radius: 18px;
    margin-bottom: 10px;
    max-width: 70%;
    word-wrap: break-word;
    clear: both; 
}

/* --- 画像メッセージのスタイル --- */
/* --- 画像メッセージのスタイル --- */
#messages li img {
    height: 150px; /* ★重要：高さを150pxに固定 */
    width: auto;   /* 幅は高さに合わせて自動調整 */
    max-width: 100%;
    border-radius: 10px;
    display: block; 
    cursor: pointer; /* ★追加：クリックできることが分かるようにカーソルを変える */
    object-fit: cover; /* ★重要：比率を保ったまま、要素を埋め尽くすように調整 */
}

/* --- 相手のメッセージ（左側） --- */
#messages li.opponent {
    background: #ffffff;
    float: left;
}

/* --- 自分のメッセージ（右側） --- */
#messages li.me {
    background: #8de041;
    float: right;
}

/* --- 相手の名前ラベル --- */
.name-label {
    clear: both;
    float: left;
    font-size: 12px;
    color: #f0f0f0;
    margin-left: 5px;
    margin-bottom: 2px;
}

/* --- 入力フォーム全体 --- */
#form {
    background: rgba(245, 245, 245, 0.95);
    padding: 10px;
    display: flex;
    align-items: center;
    box-sizing: border-box;
    border-top: 1px solid #ddd;
    /* position: fixed は不要になったので削除 */
    /* border: 2px solid blue; デバッグ用なのでコメントアウト */
}

/* --- 入力欄 --- */
#input {
    border: 1px solid #ccc;
    padding: 10px;
    flex-grow: 1;
    border-radius: 20px;
    margin-right: 10px;
}
#input:focus {
    outline: none;
}

/* --- 送信ボタン --- */
#form button {
    background: #4a80e2;
    border: none;
    padding: 10px 15px;
    color: white;
    border-radius: 8px;
    cursor: pointer;
}

/* --- 画像アイコンのスタイル --- */
.image-upload-label {
    padding: 0 10px;
    font-size: 24px;
    cursor: pointer;
    display: flex;
    align-items: center;
}

/* SweetAlert2のモーダルを全画面表示にするためのカスタムCSS */
.fullscreen-swal {
    width: 90vw !important; /* 画面幅の90% */
    height: 90vh !important; /* 画面高さの90% */
    padding: 0 !important;
}

.fullscreen-swal .swal2-image {
    width: 100%;
    height: 100%;
    object-fit: contain; /* 画像全体が見えるように、比率を保ってフィットさせる */
}

/* --- SweetAlert2のボタンをカスタム --- */

/* モーダル全体のボタン配置を調整 */
.swal2-actions {
    position: absolute;
    top: 10px;
    right: 50px; /* 閉じるボタンの隣に配置 */
}

/* ダウンロードボタンの背景を透明に */
.swal2-confirm {
    background: transparent !important;
    color: white !important;
    font-size: 24px !important; /* アイコンサイズを大きく */
    padding: 0 10px !important;
    box-shadow: none !important;
}
/* ホバー時の色も調整 */
.swal2-confirm:hover {
    background: rgba(255, 255, 255, 0.1) !important;
}

/* 閉じるボタンの色を白に */
.swal2-close {
    color: white !important;
    font-size: 32px !important;
}
.swal2-close:hover {
    color: #ddd !important;
}

/* style.css の一番下に追加したカスタムCSSを、これでまるごと上書き */

/* --- SweetAlert2のモーダルをカスタム --- */

/* モーダル本体のスタイル */
.fullscreen-swal {
    width: 90vw !important;
    height: 90vh !important;
    padding: 0 !important;
}

/* モーダル内の画像のスタイル */
.fullscreen-swal .swal2-image {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

/* ★★★ここからがボタンレイアウトの核★★★ */

/* 閉じるボタンとアクションボタンのコンテナを取得 */
.swal2-header {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    display: flex; /* Flexboxレイアウトを適用 */
    justify-content: flex-end; /* 右端に寄せる */
    align-items: center; /* 上下中央揃え */
    padding: 1em;
    pointer-events: none; /* 下の画像をクリックできるように */
}

/* 各ボタンがクリックできるように */
.swal2-header > * {
    pointer-events: auto;
}

/* アクションボタン（ダウンロードボタン）のコンテナ */
.swal2-actions {
    margin: 0 !important;
    padding: 0 !important;
}

/* ダウンロードボタンのスタイル */
.swal2-confirm {
    background: transparent !important;
    color: white !important;
    font-size: 14px !important; /* ★フォントサイズを小さく */
    padding: 0 10px !important;
    box-shadow: none !important;
    border: none !important;
    margin-right: 10px !important; /* 閉じるボタンとの間に少し隙間を */
}
.swal2-confirm:hover {
    text-decoration: underline !important;
}

/* 閉じるボタンのスタイル */
.swal2-close {
    position: static !important; /* 絶対配置を解除 */
    color: white !important;
    font-size: 28px !important;
    margin: 0 !important;
}
.swal2-close:hover {
    color: #ddd !important;
}

#messages li {
    display: flex; /* Flexboxを適用 */
    align-items: flex-end; /* 下端揃え */
    gap: 8px; /* メッセージと時刻の間の隙間 */
}

/* 自分のメッセージの場合は、要素の順番を逆にする */
#messages li.me {
    flex-direction: row-reverse; /* 時刻が左、メッセージが右に来る */
}

.message-content {
    /* この要素は、画像またはテキストを包む */
    padding: 10px 15px;
    border-radius: 18px;
    word-wrap: break-word;
}

/* 自分のメッセージの吹き出し色 */
#messages li.me .message-content {
    background: #8de041;
}
/* 相手のメッセージの吹き出し色 */
#messages li.opponent .message-content {
    background: #ffffff;
}

.message-time {
    font-size: 12px;
    color: #f0f0f0;
    white-space: nowrap; /* 時刻が改行されないように */
    margin-bottom: 2px;
}